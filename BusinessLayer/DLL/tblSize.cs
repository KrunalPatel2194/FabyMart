
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;

namespace BusinessLayer
{
    public class tblSize : _tblSize
    {
        public tblSize()
        {

        }
        public DataTable LoadGridData(string strColumnName, string strColumnValue)
        {
            strColumnValue = strColumnValue.Replace("'", "");

            string StrQuery = " select * from tblSize where 1=1 ";

            if (!string.IsNullOrEmpty(strColumnValue) & strColumnName != "0")
            {
                StrQuery += " and " + strColumnName + " LIKE '%" + strColumnValue + "%'";
            }

            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }


        public void SetDefaultSize(string strSizeId = "0")
        {
            string StrQuery = " UPDATE tblSize SET appIsDefault='False' ";
            base.LoadFromRawSql(StrQuery);
            if (strSizeId != "0")
            {
                StrQuery = "UPDATE tblSize SET appIsDefault='True',appIsActive='True' Where appSizeID=" + strSizeId;
                base.LoadFromRawSql(StrQuery);
            }
        }

        public DataTable LoadSizeProduct(string strProductId)
        {

            string StrQuery = " Select appSizeId From tblSize Where appSizeId In ( Select appSizeId From tblSizeSubCategory	Where appSubCategoryId In( Select appSubCategoryId From tblProductSubCategory Where appProductID=" + strProductId + " ))";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        public DataTable LoadAllSize()
        {
            string StrQuery = " select * from tblSize Order By appSize ";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }
    }
}
