
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;

namespace BusinessLayer
{
    public class tblProductColor : _tblProductColor
    {
        public tblProductColor()
        {

        }
        public DataTable LoadGridData(string strProductId, string strColorId)
        {

            string StrQuery = " select tblProductColor.appProductColorID,tblProductColor.appProductID,tblProductColor.appColorID,tblProductColor.appIsDefault,tblProductColor.appIsActive,tblProductColor.appDisplayOrder,tblColor.appColorCode,tblColor.appColorImage,tblColor.appColorName,IsNull(appTotalImg,0) appTotalImg";
            StrQuery += " from tblProductColor";
            StrQuery += " Inner Join tblColor On tblColor.appColorID=tblProductColor.appColorID";

            StrQuery += " Left join (select Count(*) as appTotalImg,appProductColorID from tblProductImage group by tblProductImage.appProductColorID )tblProductImage on tblProductImage.appProductColorID=tblProductColor.appProductColorID";
            StrQuery += " Where 1=1 ";

            if (strProductId != "0")
            {
                StrQuery += " and  tblProductColor.appProductID=" + strProductId;
            }
            if (strColorId != "0")
            {
                StrQuery += " and  tblProductColor.appColorID=" + strColorId;
            }
            StrQuery += " order by tblProductColor.appDisplayOrder  ";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        public void SetProductDefaultColor(string strProduct, string strProductColorId = "0")
        {
            string StrQuery = " UPDATE tblProductColor SET appIsDefault='False' Where appProductID=" + strProduct;
            base.LoadFromRawSql(StrQuery);
            if (strProductColorId != "0")
            {
                StrQuery = "UPDATE tblProductColor SET appIsDefault='True',appIsActive='True' Where appProductID=" + strProduct + " And appProductColorID=" + strProductColorId;
                base.LoadFromRawSql(StrQuery);
            }
        }

        public DataTable LoadProductColor(string strProductId)
        {

            string StrQuery = " select tblProductColor.appProductColorID,tblProductColor.appProductID,tblProductColor.appColorID,tblProductColor.appIsDefault,tblProductColor.appIsActive,tblProductColor.appDisplayOrder,tblColor.appColorCode,tblColor.appColorImage,tblColor.appColorName";
            StrQuery += " from tblProductColor";
            StrQuery += " Inner Join tblProductDetail on tblProductDetail.appProductColorID=tblProductColor.appProductColorID  ";

            StrQuery += " Inner Join tblProductImage on tblProductImage.appProductColorID=tblProductColor.appProductColorID and tblProductImage.appIsDefault=1 ";
            StrQuery += " Inner Join tblColor On tblColor.appColorID=tblProductColor.appColorID";
            StrQuery += " Where tblProductColor.appIsActive=1 and tblProductDetail.appIsDefault=1  and  tblProductColor.appProductID=" + strProductId;
            StrQuery += " order by tblProductColor.appDisplayOrder  ";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        public string GetProductColorName(string strProductColorID)
        {
            string StrQuery = " Select tblColor.appColorName From tblProductColor Inner Join tblColor on tblColor.appColorID=tblProductColor.appColorID ";
            StrQuery += " where tblProductColor.appProductColorID=" + strProductColorID;
            base.LoadFromRawSql(StrQuery);

            if (string.IsNullOrEmpty(base.DefaultView.Table.Rows[0][0].ToString()))
            {
                return "";
            }
            else
            {
                return base.DefaultView.Table.Rows[0][0].ToString();
            }

        }


    }
}
