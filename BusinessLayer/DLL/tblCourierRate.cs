
// Generated by MyGeneration Version # (1.2.0.7)

using System;
using System.Data;

namespace BusinessLayer
{
    public class tblCourierRate : _tblCourierRate
    {
        public tblCourierRate()
        {

        }
        public DataTable LoadGridData(string strColumnName, string strColumnValue)
        {
            strColumnValue = strColumnValue.Replace("'", "");

            string StrQuery = "select tblCourierRate.appPinCodeID tblCourierRate.appCourierRateID,tblCourierRate.appMinWeight,tblCourierRate.appMaxWeight,tblCourierRate.appRate from tblCourierRate ";
            StrQuery += "Inner join tblCourierCompany on tblCourierCompany.appCourierCompanyID = tblCourierRate.appCourierCompanyID ";
            StrQuery += "  where 1=1 ";

            if (!string.IsNullOrEmpty(strColumnValue) & strColumnName != "0")
            {
                StrQuery += "And " + strColumnName + " LIKE '%" + strColumnValue + "%'";
            }

            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;

        }
        public DataTable LoadCourierRateGridData(string strCourierRateID)
        {
            string StrQuery = " SELECT     tblPinCode.appPinCode, tblCourierRate.*FROM  tblCourierRate INNER JOIN   tblPinCode ON tblCourierRate.appPinCodeID = tblPinCode.appPinCodeID";
            //string StrQuery = "select tblCourierRate.appPinCodeID,tblCourierRate.appCourierRateID,tblCourierRate.appMinWeight,tblCourierRate.appMaxWeight,tblCourierRate.appRate from tblCourierRate ";
            StrQuery += "  where tblCourierRate.appCourierCompanyID= " + strCourierRateID;
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;

        }
        public string IsExitsCourier(string strPinCodeID, string strWeight)
        {
            string StrQuery = "Select appCourierCompanyID From tblCourierRate ";
            StrQuery += "  where appPinCodeID=" + strPinCodeID + " and (" + strWeight + ") between appMinWeight and appMaxWeight";
            base.LoadFromRawSql(StrQuery);
            if (base.DefaultView.Table.Rows.Count > 0)
            {
                if (base.DefaultView.Table.Rows[0][0].ToString() != "")
                {
                    return base.DefaultView.Table.Rows[0][0].ToString();
                }
                else
                {
                    return "0";
                }
            }
            else
            {
                return "0";
            }
        }
    }
}
