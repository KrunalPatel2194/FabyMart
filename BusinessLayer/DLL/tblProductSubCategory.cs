
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;

namespace BusinessLayer
{
	public class tblProductSubCategory : _tblProductSubCategory
	{
		public tblProductSubCategory()
		{
		
		}
        public DataTable LoadGridData(string strProductId,string strCategoryId)
        {
           
            string StrQuery = "select tblProductSubCategory.appProductSubCategoryID, tblProductSubCategory.appIsActive,tblProductSubCategory.appDisplayOrder,tblSubCategory.appSubCategory,tblCategory.appCategory	from tblProductSubCategory ";
            StrQuery += " inner join tblSubCategory on tblSubCategory.appSubCategoryID=tblProductSubCategory.appSubCategoryID  ";
            StrQuery += " inner join tblCategory on tblSubCategory.appCategoryID=tblCategory.appCategoryID   ";
            StrQuery += "  where appProductID=" + strProductId + " ";

            if (!string.IsNullOrEmpty(strCategoryId) & strCategoryId != "0")
            {
                StrQuery += " and tblCategory.appCategoryID=" + strCategoryId;
            }
         
           
          
            StrQuery += " order by tblProductSubCategory.appDisplayOrder  ";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }
      
        public DataTable LoadUnSelectedCategories(string strProductId,string strCategoryId)
        {

            string StrQuery = "   select * From tblSubCategory    ";
            StrQuery += " where  appCategoryID=" + strCategoryId + " and     ";
            StrQuery += " tblSubCategory.appSubCategoryID  Not In ( select appSubCategoryID From tblProductSubCategory Where appProductID=" + strProductId+")   ";
 

            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }
    

        public DataTable LoadSubCategories(string strProductId)
        {

            string StrQuery = " Select tblRelatedProduct.appRelatedProductID,tblRelatedProduct.appIsActive,tblRelatedProduct.appDisplayOrder,tblProduct.appProductID,appProductName,appProductCode,case when appDescription is null then '' else case When LEN(appDescription) <= 40  then appDescription else LEFT(appDescription, 40) + '...' End End appDescription,appProductTag,appIsNewArrival,appIsFeatured,appIsBestSeller,tblProductDetail.appSellerPrice,tblProductDetail.appMRP,tblProductDetail.appPrice,tblProductDetail.appQuantity,tblProductDetail.appSKUNo,tblColor.appColorName,tblColor.appColorCode,tblProductImage.appThumbImage,tblProductImage.appNormalImage,tblProductImage.appLargeImage,tblProductImage.appSmallImage 	From tblRelatedProduct inner join  tblProduct On tblProduct.appProductID=tblRelatedProduct.appRelatedID inner join ( Select * From tblProductColor where tblProductColor.appIsDefault=1)  tblProductColor on tblProductColor.appProductID=tblProduct.appProductID  inner join ( Select * From tblProductDetail where tblProductDetail.appIsDefault=1)tblProductDetail on tblProductDetail.appProductColorID=tblProductColor.appProductColorID inner join tblColor on tblColor.appColorID=tblProductColor.appColorID		inner join (Select * From tblProductImage Where tblProductImage.appIsDefault=1) tblProductImage on tblProductImage.appProductColorID=tblProductColor.appProductColorID Where tblRelatedProduct.appIsActive=1 ";
            StrQuery += " and tblRelatedProduct.appProductID=" + strProductId;
            StrQuery += " Order by tblRelatedProduct.appDisplayOrder  ";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }
	}
}
