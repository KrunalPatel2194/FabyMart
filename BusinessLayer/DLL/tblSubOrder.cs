
// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
namespace BusinessLayer
{
    public class tblSubOrder : _tblSubOrder
    {
        public tblSubOrder()
        {

        }
        public DataTable LoadGridData(string strColumnName, string strColumnValue, string strOrderId)
        {
            strColumnValue = strColumnValue.Replace("'", "");

            string StrQuery = " Select tblSubOrder.appSubOrderID,tblSubOrder.appSubOrderNo,tblSubOrder.appQty,tblSubOrder.appSellingPrice,tblSubOrder.appSubOrderStatusID,convert(varchar, tblSubOrder.appMaxDispatchDate,103)appMaxDispatchDate,tblProductDetail.appProductDetailID,tblProduct.appProductName,tblProduct.appProductCode,tblProductDetail.appProductColorID,tblProductDetail.appIsDefault,tblProductDetail.appMRP,tblProductDetail.appPrice,tblProductDetail.appQuantity,tblProductDetail.appSKUNo,tblProductDetail.appSizeID,tblProductColor.appColorID,tblColor.appColorName,tblColor.appColorCode,tblColor.appColorImage,tblSize.appsize,tblProductImage.appNormalImage";
            StrQuery += " From tblSubOrder  ";
            StrQuery += " Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID  ";
            StrQuery += " Inner join tblProductColor On tblProductColor.appProductColorID=tblProductDetail.appProductColorID ";
            StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID  ";
            StrQuery += " Inner join tblProductImage On tblProductImage.appProductColorID=tblProductColor.appProductColorID   ";
            StrQuery += " inner join tblColor On tblColor.appColorID=tblProductColor.appColorID  ";
            StrQuery += " Left Join tblsize on tblSize.appsizeId=tblProductDetail.appsizeId  ";
            StrQuery += " where  tblProductImage.appIsDefault=1 and tblSubOrder.appOrderID=" + strOrderId;
            if (!string.IsNullOrEmpty(strColumnValue) & strColumnName != "0")
            {
                StrQuery += " and " + strColumnName + " LIKE '%" + strColumnValue + "%'";
            }

            StrQuery += " order by tblSubOrder.appSubOrderID  Desc";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        //public DataTable GetSubOrderDetailList(string strOrderID, string strStatus, bool IsCheckDocket = false, string strMenifest = "")
        //{
        //    string StrQuery = " Select Row_Number() over(ORDER BY tblSubOrder.appSubOrderID ) as appRowNo, tblOrder.appPaymentMode, tblProduct.appProductId,tblProduct.appProductName,tblProduct.appProductCode, tblProduct.appWeight, tblSubOrder.appSubOrderID,tblSubOrder.appOrderID,tblSubOrder.appSubOrderNo,tblSubOrder.appProductDetailID,tblSubOrder.appQty,tblSubOrder.appSellingPrice,tblSubOrder.appSubOrderStatusID,convert(varchar,tblSubOrder.appSubOrderChangeDate,105) appSubOrderChangeDate,convert(varchar,tblSubOrder.appMaxDispatchDate,105) appMaxDispatchDate,tblSubOrder.appCourierCompanyID,tblSubOrder.appDocketNo,tblSubOrder.appShippingCharges,tblSubOrder.appShippedDate,tblSubOrder.appShippedStatus,tblSubOrder.appCommision,tblSubOrder.appCommisionRs,tblSubOrder.appServiceTax,tblSubOrder.appServiceTaxRs,tblSubOrder.appFixedFee,tblSubOrder.appManifestGenerated,tblSubOrder.appManifestID,tblSubOrder.appSelfCourier,convert(varchar,tblSubOrder.appDispatchDate,105) appDispatchDate,convert(varchar,tblSubOrder.appDeliveryDate,105) appDeliveryDate,tblSubOrder.appInvoiceGenerated,tblSubOrder.appIsPaid,(IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)) as appTotal,tblOrder.appOrderNo,tblOrder.appCustomerID, tblOrder.appCreatedDate,tblOrder.appOrderStatusID, tblOrder.appOrderAmount,convert(varchar,tblOrder.appOrderStatusChangeDate,105)appOrderStatusChangeDate, tblOrder.appReceiverName,tblOrder.appReceiverAddress, tblOrder.appReceiverContactNo1,tblOrder.appReceiverContactNo2,tblOrder.appPreferedTime,tblOrder.appRecevierEmail,tblOrderStatus.appOrderStatus ,convert(varchar,tblOrder.appCreatedDate,105)appOrderedDate, tblProductDetail.appProductDetailID,tblProductDetail.appProductColorID,tblProductDetail.appSKUNo,tblProductDetail.appSizeID, tblProduct.appProductId,tblProduct.appProductName,tblProduct.appProductCode, tblProductColor.appColorID,tblColor.appColorName,tblColor.appColorCode, tblSize.appsize,tblProductImage.appNormalImage,tblProductImage.appThumbImage,tblCourierCompany.appCourierCompany,tblCourierCompany.appCourierCompanyID ";
        //    StrQuery += " From tblSubOrder	  ";
        //    StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID ";
        //    StrQuery += " Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID  ";
        //    StrQuery += " Inner join tblProductColor On tblProductColor.appProductColorID=tblProductDetail.appProductColorID ";
        //    StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID  ";
        //    StrQuery += " Inner join tblProductImage On tblProductImage.appProductColorID=tblProductColor.appProductColorID   ";
        //    StrQuery += " inner join tblColor On tblColor.appColorID=tblProductColor.appColorID  ";
        //    StrQuery += " inner join tblOrderStatus on tblSubOrder.appSubOrderStatusID=tblOrderStatus.appOrderStatusID ";
        //    StrQuery += " Left Join tblsize on tblSize.appsizeId=tblProductDetail.appsizeId  ";
        //    StrQuery += " Left Join tblCourierCompany on tblCourierCompany.appCourierCompanyID=tblSubOrder.appCourierCompanyID  ";
        //    StrQuery += " where  tblProductImage.appIsDefault=1 and tblSubOrder.appSubOrderStatusID in (" + strStatus + " )";


        //    if (IsCheckDocket)
        //    {
        //        StrQuery += " and tblSubOrder.appCourierCompanyID is not null and tblSubOrder.appDocketNo is not null ";
        //    }
        //    if (strOrderID != "0")
        //    {
        //        StrQuery += " and tblSubOrder.appOrderId=" + strOrderID;
        //    }

        //    if (strMenifest != "0" && strMenifest != "")
        //    {
        //        if (strMenifest == "true")
        //        {
        //            StrQuery += " and tblSubOrder.appManifestGenerated=1 ";
        //        }
        //        else if (strMenifest == "false")
        //        {
        //            StrQuery += " and tblSubOrder.appManifestGenerated=0 ";
        //        }
        //    }



        //    StrQuery += " order by tblSubOrder.appSubOrderID  Desc";
        //    base.LoadFromRawSql(StrQuery);
        //    return base.DefaultView.Table;
        //}
        public DataTable GetSubOrderDetailList(string strOrderID, string strStatus, bool IsCheckDocket = false, string strMenifest = "")
        {
            string StrQuery = " Select Row_Number() over(ORDER BY tblSubOrder.appSubOrderID ) as appRowNo, tblOrder.appPaymentMode, tblProduct.appProductId,tblProduct.appProductName,tblProduct.appProductCode,isnull(tblProduct.appWeight,0)appWeight, tblSubOrder.appSubOrderID,tblSubOrder.appOrderID,tblSubOrder.appSubOrderNo,tblSubOrder.appProductDetailID,tblSubOrder.appQty,tblSubOrder.appSellingPrice,tblSubOrder.appSubOrderStatusID,convert(varchar,tblSubOrder.appSubOrderChangeDate,105) appSubOrderChangeDate,convert(varchar,tblSubOrder.appMaxDispatchDate,105) appMaxDispatchDate,tblSubOrder.appCourierCompanyID,tblSubOrder.appDocketNo,tblSubOrder.appShippingCharges,tblSubOrder.appShippedDate,tblSubOrder.appShippedStatus,tblSubOrder.appCommision,tblSubOrder.appCommisionRs,tblSubOrder.appServiceTax,tblSubOrder.appServiceTaxRs,tblSubOrder.appFixedFee,tblSubOrder.appManifestGenerated,tblSubOrder.appManifestID,tblSubOrder.appSelfCourier,convert(varchar,tblSubOrder.appDispatchDate,105) appDispatchDate,convert(varchar,tblSubOrder.appDeliveryDate,105) appDeliveryDate,tblSubOrder.appInvoiceGenerated,tblSubOrder.appIsPaid,(IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)) as appTotal,tblOrder.appOrderNo,tblOrder.appCustomerID, tblOrder.appCreatedDate,tblOrder.appOrderStatusID, tblOrder.appOrderAmount,convert(varchar,tblOrder.appOrderStatusChangeDate,105)appOrderStatusChangeDate, tblOrder.appReceiverName,tblOrder.appReceiverAddress, tblOrder.appReceiverContactNo1,tblOrder.appReceiverContactNo2,tblOrder.appPreferedTime,tblOrder.appRecevierEmail,tblOrderStatus.appOrderStatus ,convert(varchar,tblOrder.appCreatedDate,105)appOrderedDate, tblProductDetail.appProductDetailID,tblProductDetail.appProductColorID,tblProductDetail.appSKUNo,tblProductDetail.appSizeID, tblProduct.appProductId,tblProduct.appProductName,tblProduct.appProductCode, tblProductColor.appColorID,tblColor.appColorName,tblColor.appColorCode,tblColor.appColorImage, tblSize.appsize,tblProductImage.appNormalImage,tblProductImage.appThumbImage,tblCourierCompany.appCourierCompany,tblCourierCompany.appCourierCompanyID,tblReturnOrderDetail.appReturnOrderID ,(IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appDiscount,0)) as appTotalDiscount,  (IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)) - (IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appDiscount,0)) as appTotalamountToBePaid ,(tblSubOrder.appQty*tblSubOrder.appSellingPrice) as PriceMulQty";
            StrQuery += " From tblSubOrder	  ";
            StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID ";
            StrQuery += " Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID  ";
            StrQuery += " Inner join tblProductColor On tblProductColor.appProductColorID=tblProductDetail.appProductColorID ";
            StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID  ";
            StrQuery += " Inner join tblProductImage On tblProductImage.appProductColorID=tblProductColor.appProductColorID   ";
            StrQuery += " inner join tblColor On tblColor.appColorID=tblProductColor.appColorID  ";
            StrQuery += " inner join tblOrderStatus on tblSubOrder.appSubOrderStatusID=tblOrderStatus.appOrderStatusID ";
            StrQuery += " Left Join tblsize on tblSize.appsizeId=tblProductDetail.appsizeId  ";
            StrQuery += " Left Join tblCourierCompany on tblCourierCompany.appCourierCompanyID=tblSubOrder.appCourierCompanyID  ";
            StrQuery += "  left join tblReturnOrderDetail on tblReturnOrderDetail.appSubOrderID=tblSubOrder.appSubOrderID ";

            StrQuery += " where  tblProductImage.appIsDefault=1 ";

            if (strStatus != "")
            {
             StrQuery += " and tblSubOrder.appSubOrderStatusID in (" + strStatus + " )";
             }

            if (IsCheckDocket)
            {
                StrQuery += " and tblSubOrder.appCourierCompanyID is not null and tblSubOrder.appDocketNo is not null ";
            }
            if (strOrderID != "0")
            {
                StrQuery += " and tblSubOrder.appOrderId=" + strOrderID;
            }

            if (strMenifest != "0" && strMenifest != "")
            {
                if (strMenifest == "true")
                {
                    StrQuery += " and tblSubOrder.appManifestGenerated=1 ";
                }
                else if (strMenifest == "false")
                {
                    StrQuery += " and tblSubOrder.appManifestGenerated=0 ";
                }
            }



            StrQuery += " order by tblSubOrder.appSubOrderID  Desc";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }
      
        public DataTable GetOrderStatusWise(string strColumnName, string strColumnValue, string strStatus, string strColorCode = "")
        {
            strColumnValue = strColumnValue.Replace("'", "");

            string StrQuery = " Select tblSubOrder.appSubOrderID,tblSubOrder.appSubOrderNo,tblSubOrder.appQty,tblSubOrder.appSellingPrice,(IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)) as appTotal,tblSubOrder.appSubOrderStatusID,convert(varchar, tblSubOrder.appMaxDispatchDate,103)appMaxDispatchDate, tblSubOrder.appDocketNo,convert(varchar, tblSubOrder.appShippedDate,103) appShippedDate, tblSubOrder.appShippedStatus,tblProductDetail.appProductDetailID,tblProduct.appProductName,tblProduct.appProductCode,tblProductDetail.appProductColorID,tblProductDetail.appIsDefault,tblProductDetail.appMRP,tblProductDetail.appPrice,tblProductDetail.appQuantity,tblProductDetail.appSKUNo,tblProductDetail.appSizeID,tblProductColor.appColorID,tblColor.appColorName,tblColor.appColorCode,tblColor.appColorImage,tblSize.appsize,tblProductImage.appThumbImage,tblProductImage.appNormalImage,tblOrder.*,tblCustomer.appFirstName + ' '+ tblCustomer.appLastName as AppCustomerName,tblCourierCompany.appCourierCompany ,case When tblProduct.appIsColor=1  Then tblColor.appColorName else '' End appColorLink ";
            StrQuery += " From tblSubOrder  ";
            StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID  ";
            StrQuery += " Inner Join tblCustomer On tblCustomer.appCustomerID=tblOrder.appCustomerID ";
            StrQuery += " Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID  ";
            StrQuery += " Inner join tblProductColor On tblProductColor.appProductColorID=tblProductDetail.appProductColorID ";
            StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID  ";
            StrQuery += " Inner join tblProductImage On tblProductImage.appProductColorID=tblProductColor.appProductColorID   ";
            StrQuery += " inner join tblColor On tblColor.appColorID=tblProductColor.appColorID  ";
            StrQuery += " Left Join tblsize on tblSize.appsizeId=tblProductDetail.appsizeId  ";
            StrQuery += " Left Join tblCourierCompany on tblCourierCompany.appCourierCompanyID=tblSubOrder.appCourierCompanyID  ";
            StrQuery += " where  tblProductImage.appIsDefault=1 and tblSubOrder.appSubOrderStatusID in (" + strStatus + " )";
            if (!string.IsNullOrEmpty(strColumnValue) & strColumnName != "0")
            {
                StrQuery += " and " + strColumnName + " LIKE '%" + strColumnValue + "%'";
            }
            else if (strColumnName == "0" && !(string.IsNullOrEmpty(strColumnValue)))
            {
                StrQuery += " and ( appProductName LIKE '%" + strColumnValue + "%'";
                StrQuery += " or  appQty LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appSellingPrice LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appSKUNo LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appLastName LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appFirstName LIKE '%" + strColumnValue + "%' )";

                //StrQuery += " or  appReceiverContactNo1 LIKE '%" + strColumnValue + "%' ";
                //StrQuery += " or  appReceiverContactNo2 LIKE '%" + strColumnValue + "%' ";
                // StrQuery += " or  appRecevierEmail LIKE '%" + strColumnValue + "%' ";
                //StrQuery += " or  appPreferedTime LIKE '%" + strColumnValue + "%' ";
                // StrQuery += " or  appBillReceiverName LIKE '%" + strColumnValue + "%' )";
                //StrQuery += " or  appBillReceiverContactNo1 LIKE '%" + strColumnValue + "%' ";
                //StrQuery += " or  appBillReceiverContactNo2 LIKE '%" + strColumnValue + "%' ";
                //StrQuery += " or  appBillRecevierEmail LIKE '%" + strColumnValue + "%' )";

            }
            if (strColorCode != "0")
            {
                StrQuery += " and tblColor.AppColorCode='" + strColorCode + "'";
            }

            StrQuery += " order by tblSubOrder.appSubOrderID  Desc";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        public DataTable GetCofirmProductList(int iOrderStatus)
        {
            string StrQuery = "select tblProductImage.appThumbImage,tblProductDetail.appSKUNo,tblSubOrder.TotalQty,tblProduct.appProductName ";
            StrQuery += " From tblProductDetail";
            StrQuery += " inner join tblProductColor on tblProductColor.appProductColorID=tblProductDetail.appProductColorID";
            StrQuery += " inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID";
            //StrQuery += " inner join tblBrand on tblBrand.appBrandID=tblProduct.appBrandID";
            StrQuery += " inner join  (select tblProductDetail.appSKUNo,SUM(tblSubOrder.appQty)as TotalQty from tblSubOrder inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID Where tblSubOrder.appSubOrderStatusID=" + iOrderStatus + " group by tblProductDetail.appSKUNo) tblSubOrder on tblSubOrder.appSKUNo=tblProductDetail.appSKUNo";
            StrQuery += " inner join tblProductImage on tblProductDetail.appProductColorID=tblProductImage.appProductColorID ";

            StrQuery += " Where 1=1  and tblProductImage.appIsDefault=1 ";

            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        public DataTable GetOrderIdProductWeight(string strOrderID, string strStatus)
        {
            string StrQuery = " Select tblSubOrder.appOrderID,sum(isnull(tblProduct.appWeight,1)*isnull(tblSubOrder.appQty,1)) as appTotalWeight,tblOrder.appPaymentMode,tblOrder.appReceiverPIN";
            StrQuery += " From tblSubOrder ";
            StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID ";
            StrQuery += " Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID ";
            StrQuery += " Inner join tblProductColor on tblProductColor.appProductColorID=tblProductDetail.appProductColorID ";
            StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID ";
            StrQuery += " Where  tblSubOrder.appOrderID in (" + strOrderID + ") and tblSubOrder.appSubOrderStatusID in (" + strStatus + " )";
            StrQuery += " Group by tblSubOrder.appOrderID,tblOrder.appPaymentMode,tblOrder.appReceiverPIN ";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        public DataTable GetCourierCompanyIdFromData(string strWeight, string strPinCode, bool IsCOD)
        {
            string StrQuery = "Select Top 1 * From (  Select tblCourierCompany.appCourierCompanyID,tblCourierRate.appIsCOD,IsNull(tblCourierCompany.appCODRate,0) appCODRate, case when tblCourierRate.appIsCOD=1 then isnull(tblCourierRate.appRate,1)+ isnull(tblCourierCompany.appCODRate,1) else isnull(tblCourierRate.appRate,1) end as appRate	From tblCourierRate 	inner join tblPincode on tblPincode.appPinCodeID=tblCourierRate.appPinCodeID	inner join tblCourierCompany on tblCourierCompany.appCourierCompanyID=tblCourierRate.appCourierCompanyID ";
            StrQuery += " Where  " + strWeight + " between appMinWeight and appMaxWeight 	and tblPincode.appPinCode= " + strPinCode;
            if (IsCOD)
            {
                StrQuery += " and  tblCourierRate.appIsCOD='" + IsCOD.ToString() + "'";
            }
            StrQuery += " ) tblCourierCompany	order by appRate";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        public void SetOrderMovetoConfirm(int intCurrentStatus, int intChangeStatus, string strOrderIds, string strChangeDate, string strCourierCompanyId, string strDocketNo, string strShippingCharges = "", string strCODCharges = "")
        {
            string StrQuery = "UPDATE tblSubOrder SET appSubOrderStatusID=" + intChangeStatus + ",appSubOrderChangeDate=CONVERT(datetime,'" + strChangeDate + "',103) ";
            if (strDocketNo != "")
            {
                StrQuery += " ,appDocketNo='" + strDocketNo + "' ";
            }
            if (strCourierCompanyId != "")
            {
                StrQuery += ",appCourierCompanyID=" + strCourierCompanyId;
            }
            if (strShippingCharges != "")
            {
                StrQuery += ",appShippingCharges=" + strShippingCharges;
            } if (strCODCharges != "")
            {
                StrQuery += ",appCODCharges=" + strCODCharges;
            }
            StrQuery += " Where appOrderID In (" + strOrderIds + " )";
            StrQuery += " and appSubOrderStatusID In (" + intCurrentStatus + " )";
            base.LoadFromRawSql(StrQuery);
        }
      
        public void SetOrderMoveToDelivered(int intCurrentStatus, int intChangeStatus, string strOrderIds, string strChangeDate)
        {
            string StrQuery = "UPDATE tblSubOrder SET appSubOrderStatusID=" + intChangeStatus + ",appSubOrderChangeDate=CONVERT(datetime,'" + strChangeDate + "',103) ";

            StrQuery += " Where appOrderID In (" + strOrderIds + " )";
            StrQuery += " and appSubOrderStatusID In (" + intCurrentStatus + " ) and appDocketNo is not null and appCourierCompanyID is not null ";
            base.LoadFromRawSql(StrQuery);
        }
     
        public void SetDocketNumber(int intCurrentStatus, string strOrderId, string strCourierCompanyId, string strDocketNo, bool IsSelfCourier)
        {
            string StrQuery = "UPDATE tblSubOrder  ";
            StrQuery += "SET appDocketNo=" + strDocketNo + ",appSelfCourier='" + IsSelfCourier.ToString() + "'";
            StrQuery += "  Where appOrderID =" + strOrderId + " and appCourierCompanyID=" + strCourierCompanyId;
            StrQuery += " and appSubOrderStatusID In (" + intCurrentStatus + " )";
            base.LoadFromRawSql(StrQuery);
        }

        public void SetDocketNumberAndCourierCompanyIDOnOrderId(int intCurrentStatus, string strOrderIds, string strCourierCompanyId, string strDocketNo, bool IsSelfCourier)
        {
            string StrQuery = "UPDATE tblSubOrder SET appDocketNo='" + strDocketNo + "',appCourierCompanyID=" + strCourierCompanyId + ",appSelfCourier='" + IsSelfCourier.ToString() + "'";
            StrQuery += "  Where appOrderID In (" + strOrderIds + " ) and appDocketNo Is Null and appCourierCompanyID is Null ";
            StrQuery += " and appSubOrderStatusID In (" + intCurrentStatus + " )";
            base.LoadFromRawSql(StrQuery);
        }

        public void SetCourierInof(int intCurrentStatus, string strOrderIds, string strCourierCompanyId, string strDocketNo,string strInvoiceURL, bool IsSelfCourier)
        {
            string StrQuery = "UPDATE tblSubOrder SET appDocketNo='" + strDocketNo + "',appInvoiceURL='" + strInvoiceURL + "',appInvoiceGenerated=1,appCourierCompanyID=" + strCourierCompanyId + ",appSelfCourier='" + IsSelfCourier.ToString() + "'";
            StrQuery += "  Where appOrderID In (" + strOrderIds + " ) and appDocketNo Is Null and appCourierCompanyID is Null ";
            StrQuery += " and appSubOrderStatusID In (" + intCurrentStatus + " )";
            base.LoadFromRawSql(StrQuery);
        }

        public void SetCourierCompanyIDOnOrderId(int intCurrentStatus, string strOrderIds, string strCourierCompanyId, bool IsSelfCourier)
        {
            string StrQuery = "UPDATE tblSubOrder SET appCourierCompanyID=" + strCourierCompanyId + ",appSelfCourier='" + IsSelfCourier.ToString() + "'";
            StrQuery += "  Where appOrderID In (" + strOrderIds + " ) and appCourierCompanyID is Null ";
            StrQuery += " and appSubOrderStatusID In (" + intCurrentStatus + " )";
            base.LoadFromRawSql(StrQuery);
        }

        //public DataTable GetSubOrderListWithCityStateCountry(string strOrderId, string strStatus)
        //{
        //    string StrQuery = " Select tblSubOrder.appSubOrderID,tblSubOrder.appOrderID,tblSubOrder.appSubOrderNo,tblSubOrder.appProductDetailID,tblSubOrder.appQty,tblSubOrder.appSellingPrice,tblSubOrder.appSubOrderStatusID,convert(varchar,tblSubOrder.appSubOrderChangeDate,105) appSubOrderChangeDate,convert(varchar,tblSubOrder.appMaxDispatchDate,105) appMaxDispatchDate,tblSubOrder.appCourierCompanyID,tblSubOrder.appDocketNo,tblSubOrder.appShippingCharges,tblSubOrder.appShippedDate,tblSubOrder.appShippedStatus,tblSubOrder.appCommision,tblSubOrder.appCommisionRs,tblSubOrder.appServiceTax,tblSubOrder.appServiceTaxRs,tblSubOrder.appFixedFee,tblSubOrder.appManifestGenerated,tblSubOrder.appManifestID,tblSubOrder.appSelfCourier,convert(varchar,tblSubOrder.appDispatchDate,105) appDispatchDate,convert(varchar,tblSubOrder.appDeliveryDate,105) appDeliveryDate,tblSubOrder.appInvoiceGenerated,	(IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)) as appTotal,tblOrder.appOrderNo,tblOrder.appCustomerID, tblOrder.appCreatedDate,tblOrder.appOrderStatusID, tblOrder.appOrderAmount,convert(varchar,tblOrder.appOrderStatusChangeDate,105)appOrderStatusChangeDate, tblOrder.appReceiverName,tblOrder.appReceiverAddress, tblOrder.appReceiverContactNo1,tblOrder.appReceiverContactNo2,tblOrder.appPreferedTime,tblOrder.appRecevierEmail,tblOrder.appPaymentMode ,tblOrderStatus.appOrderStatus ,convert(varchar,tblOrder.appCreatedDate,105)appOrderedDate,tblCourierCompany.appCourierCompany,tblCourierCompany.appCourierCompanyID, DATEDIFF(day,getDate(),appMaxDispatchDate) appRemmingDispatchDay,'' as appDisplayName,'' as AppAddress1_Pickup,'' as AppAddress2_Pickup,'' as appContactNo1,'' as appSellerState,'' as appSellerCountry,  '' as appSellerCity, '' as appSellerPincode , tblBuyer.appState as appBuyerState ,tblBuyer.appCountry as appBuyerCountry, tblBuyer.appCity as appBuyerCity, tblBuyer.appPinCode as appBuyerPinCode ";
        //    //StrQuery += ",tblProductDetail.appProductDetailID,tblProductDetail.appProductColorID,tblProductDetail.appSKUNo,tblProductDetail.appSizeID, tblProduct.appProductId,tblProduct.appProductName,tblProduct.appProductCode, tblProduct.appWeight,tblProduct.appProcurementDays";
        //    StrQuery += " From tblSubOrder	  ";
        //    StrQuery += " Inner join ( Select appOrderID,min(appSubOrderId) as appSubOrderId From tblSubOrder where  tblSubOrder.appSubOrderStatusID in (" + strStatus + " ) and tblSubOrder.appCourierCompanyID is not null and tblSubOrder.appDocketNo is not null  Group by appOrderID ) tblTemp on tblTemp.appSubOrderId=tblSubOrder.appSubOrderId  ";
        //    StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID ";
        //    //StrQuery += " Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID  ";
        //    //StrQuery += " Inner join tblProductColor On tblProductColor.appProductColorID=tblProductDetail.appProductColorID ";
        //    //StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID  ";
        //    StrQuery += " inner join tblOrderStatus on tblOrderStatus.appOrderStatusID=tblSubOrder.appSubOrderStatusID";
        //    //StrQuery += " Inner join tblSeller as tblCusSeller on tblCusSeller.appSellerID=tblSubOrder.appSellerID  ";
        //    StrQuery += " Left Join tblCourierCompany on tblCourierCompany.appCourierCompanyID=tblSubOrder.appCourierCompanyID  ";
        //    StrQuery += " left join (select tblState.appState,tblCountry.appCountry, tblCity.appCity, tblPinCode.appPinCode from tblPinCode  left join tblCity on tblCity.appCityID=tblPinCode.appCityID left join tblState on tblCity.appStateID=tblState.appStateID left join tblCountry on tblState.appCountryID=tblCountry.appCountryID) as  tblBuyer  on tblBuyer.appPinCode=tblOrder.appReceiverPIN ";
        //    //StrQuery += " left join (select tblState.appState,tblCountry.appCountry, tblCity.appCity, tblPinCode.appPinCode from tblPinCode left join tblCity on tblCity.appCityID=tblPinCode.appCityID  left join tblState on tblCity.appStateID=tblState.appStateID  left join tblCountry on tblState.appCountryID=tblCountry.appCountryID) as tblSeller on tblSeller.appPinCode=tblCusSeller.appPincode_Pickup ";
        //    StrQuery += " where   tblSubOrder.appSubOrderStatusID in (" + strStatus + " )";

        //    StrQuery += " and tblSubOrder.appOrderID in (" + strOrderId + ")";
        //    StrQuery += " and tblSubOrder.appCourierCompanyID is not null and tblSubOrder.appDocketNo is not null ";
        //    StrQuery += " order by tblSubOrder.appSubOrderID  Desc";
        //    base.LoadFromRawSql(StrQuery);
        //    return base.DefaultView.Table;
        //}
        //make comment above function because we remove courier company and docket number
        public DataTable GetSubOrderListWithCityStateCountry(string strOrderId, string strStatus, string strSellerName, string strMobileNo, string strAddress, string strCountry, string strState, string strCity, string strPincode)
        {
            string StrQuery = " Select tblSubOrder.appSubOrderID,tblSubOrder.appOrderID,tblSubOrder.appSubOrderNo,tblSubOrder.appProductDetailID,tblSubOrder.appQty,tblSubOrder.appSellingPrice,tblSubOrder.appSubOrderStatusID,convert(varchar,tblSubOrder.appSubOrderChangeDate,105) appSubOrderChangeDate,convert(varchar,tblSubOrder.appMaxDispatchDate,105) appMaxDispatchDate,tblSubOrder.appCourierCompanyID,tblSubOrder.appDocketNo,tblSubOrder.appShippingCharges,tblSubOrder.appShippedDate,tblSubOrder.appShippedStatus,tblSubOrder.appCommision,tblSubOrder.appCommisionRs,tblSubOrder.appServiceTax,tblSubOrder.appServiceTaxRs,tblSubOrder.appFixedFee,tblSubOrder.appManifestGenerated,tblSubOrder.appManifestID,tblSubOrder.appSelfCourier,convert(varchar,tblSubOrder.appDispatchDate,105) appDispatchDate,convert(varchar,tblSubOrder.appDeliveryDate,105) appDeliveryDate,tblSubOrder.appInvoiceGenerated,	(IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)) as appTotal,tblOrder.appOrderNo,tblOrder.appCustomerID, convert(varchar,tblOrder.appCreatedDate,105) as appCreatedDate,tblOrder.appOrderStatusID, tblOrder.appOrderAmount,convert(varchar,tblOrder.appOrderStatusChangeDate,105)appOrderStatusChangeDate, tblOrder.appReceiverName,tblOrder.appReceiverAddress, tblOrder.appReceiverContactNo1,tblOrder.appReceiverContactNo2,tblOrder.appPreferedTime,tblOrder.appRecevierEmail,tblOrder.appPaymentMode ,tblOrderStatus.appOrderStatus ,convert(varchar,tblOrder.appCreatedDate,105)appOrderedDate,DATEDIFF(day,getDate(),appMaxDispatchDate) appRemmingDispatchDay,'" + strSellerName + "'  as appDisplayName,'" + strAddress + "' as AppAddress1_Pickup,'' as AppAddress2_Pickup,'" + strMobileNo + "' as appContactNo1,'" + strState + "' as appSellerState,'" + strCountry + "' as appSellerCountry,  '" + strCity + "' as appSellerCity, '" + strPincode + "' as appSellerPincode , tblBuyer.appState as appBuyerState ,tblBuyer.appCountry as appBuyerCountry, tblBuyer.appCity as appBuyerCity,  tblOrder.appReceiverPIN as appBuyerPinCode ";
            StrQuery += " From tblSubOrder	  ";
            StrQuery += " Inner join ( Select appOrderID,min(appSubOrderId) as appSubOrderId From tblSubOrder where  tblSubOrder.appSubOrderStatusID in (" + strStatus + " )  Group by appOrderID ) tblTemp on tblTemp.appSubOrderId=tblSubOrder.appSubOrderId  ";
            StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID ";
            StrQuery += " inner join tblOrderStatus on tblOrderStatus.appOrderStatusID=tblSubOrder.appSubOrderStatusID";
            // StrQuery += " Left Join tblCourierCompany on tblCourierCompany.appCourierCompanyID=tblSubOrder.appCourierCompanyID  ";
            StrQuery += "  left join (select  tblState.appState,tblCountry.appCountry, tblCity.appCity, tblOrder.appOrderID from tblOrder  left join tblCity on tblCity.appCityID=tblOrder.appReceiverCityID left join tblState on tblState.appStateID=tblOrder.appReceiverStateID left join tblCountry on tblCountry.appCountryID=tblOrder.appReceiverCountryID) as  tblBuyer  on tblBuyer.appOrderID=tblOrder.appOrderID  ";
            StrQuery += " where   tblSubOrder.appSubOrderStatusID in (" + strStatus + " )";

            StrQuery += " and tblSubOrder.appOrderID in (" + strOrderId + ")";
            //  StrQuery += " and tblSubOrder.appCourierCompanyID is not null and tblSubOrder.appDocketNo is not null ";
            StrQuery += " order by tblSubOrder.appSubOrderID  Desc";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }
        //public void SetProductInvoiceGenerated(string strCurrentStatus, string strOrderID)
        //{
        //    string StrQuery = "UPDATE tblSubOrder SET appInvoiceGenerated='true' Where appOrderID In (" + strOrderID + " ) and  tblSubOrder.appSubOrderStatusID in (" + strCurrentStatus + " ) and tblSubOrder.appCourierCompanyID is not null and tblSubOrder.appDocketNo is not null ";
        //    base.LoadFromRawSql(StrQuery);
        //}
        public void SetProductInvoiceGenerated(string strCurrentStatus, string strOrderID)
        {
            string StrQuery = "UPDATE tblSubOrder SET appInvoiceGenerated='true' Where appOrderID In (" + strOrderID + " ) and  tblSubOrder.appSubOrderStatusID in (" + strCurrentStatus + " )";
            base.LoadFromRawSql(StrQuery);
        }

        public DataTable GetProductInvoiceInfo(string strSubOrderID)
        {
            string StrQuery = "  Select  Row_Number() over(ORDER BY tblSubOrder.appSubOrderID ) as appRowNo,tblOrder.appOrderNo,convert(VARCHAR(10), tblOrder.appCreatedDate, 105) AS appCreatedDate ,tblOrder.appOrderAmount,tblOrder.appReceiverName,tblOrder.appReceiverAddress,tblOrder.appReceiverContactNo1,tblOrder.appReceiverContactNo2,tblOrder.appReceiverPIN,tblOrder.appPreferedTime,tblOrder.appRecevierEmail,tblOrder.appBillReceiverName,tblOrder.appBillReceiverAddress,tblOrder.appBillReceiverContactNo1,tblOrder.appBillReceiverContactNo2,tblOrder.appBillRecevierEmail,tblSubOrder.appSubOrderID,tblSubOrder.appSubOrderNo,tblSubOrder.appQty,tblSubOrder.appSellingPrice,(IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)) as appTotal,tblSubOrder.appSubOrderStatusID,convert(varchar, tblSubOrder.appMaxDispatchDate,103)appMaxDispatchDate,tblProductDetail.appProductDetailID,tblProduct.appProductName,tblProduct.appProductCode,tblProductDetail.appProductColorID,tblProductDetail.appIsDefault,tblProductDetail.appSellerPrice,tblProductDetail.appMRP,tblProductDetail.appPrice,tblProductDetail.appQuantity,tblProductDetail.appSKUNo,tblCustomer.appFirstName + ' '+ tblCustomer.appLastName as AppCustomerName,tblOrderStatus.appOrderStatus,tblCourierCompany.appCourierCompany ";
            StrQuery += " From tblSubOrder  ";
            StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID  ";
            StrQuery += " Inner Join tblCustomer On tblCustomer.appCustomerID=tblOrder.appCustomerID ";
            StrQuery += " Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID  ";
            StrQuery += " Inner join tblProductColor On tblProductColor.appProductColorID=tblProductDetail.appProductColorID ";
            StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID  ";
            StrQuery += " inner join tblOrderStatus On tblOrderStatus.appOrderStatusID=tblSubOrder.appSubOrderStatusID  ";
            StrQuery += " Left Join tblCourierCompany on tblCourierCompany.appCourierCompanyID=tblSubOrder.appCourierCompanyID  ";
            StrQuery += " where  1=1";

            if (strSubOrderID != "0")
            {
                StrQuery += " and tblSubOrder.appSubOrderID=" + strSubOrderID;
            }

            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }
        public DataTable GetCustomerSubOrder(string strCustomerID, string strOrderId)
        {
            string StrQuery = " Select  tblSubOrder.appIsDisputeApprove,tblOrder.appOrderID, tblProduct.appProductID, convert(varchar, tblOrder.appCreatedDate,105)appCreatedDate1,tblSubOrder.appSubOrderID,tblSubOrder.appSubOrderNo,tblSubOrder.appQty,tblSubOrder.appSellingPrice,(IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)) as appTotal,tblSubOrder.appSubOrderStatusID,convert(varchar, tblSubOrder.appMaxDispatchDate,103)appMaxDispatchDate,tblProductDetail.appProductDetailID,tblProduct.appProductName,tblProduct.appProductCode,tblProductDetail.appProductColorID,tblProductDetail.appIsDefault,tblProductDetail.appSellerPrice,tblProductDetail.appMRP,tblProductDetail.appPrice,tblProductDetail.appQuantity,tblProductDetail.appSKUNo,tblProductDetail.appSizeID,tblProductColor.appColorID,tblColor.appColorName,tblColor.appColorCode,tblColor.appColorImage,tblSize.appsize,tblProductImage.appThumbImage,tblProductImage.appLargeImage,tblProductImage.appNormalImage,tblOrder.*,tblCustomer.appFirstName + ' '+ tblCustomer.appLastName as AppCustomerName,tblProduct.appProductCode,tblOrderStatus.appOrderStatus,tblReturnOrderDetail.appReturnOrderID,tblReturnOrder.appReturnStatus,case When tblProduct.appIsColor=1  Then tblColor.appColorName else '' End appColorLink,tblCurrency.appCurrencyID,tblCurrency.appSymbol ,tblReturnOrder.appDocketNo, (IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appDiscount,0)) as appTotalDiscount,  (IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)) - (IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appDiscount,0)) as appTotalamountToBePaid";
            StrQuery += " From tblSubOrder  ";
            StrQuery += " Inner join tblOrderStatus on tblOrderStatus.appOrderStatusID=tblSubOrder.appSubOrderStatusID  ";
            StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID  ";
            StrQuery += " Inner Join tblCustomer On tblCustomer.appCustomerID=tblOrder.appCustomerID ";
            StrQuery += " Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID  ";
            StrQuery += " Inner join tblProductColor On tblProductColor.appProductColorID=tblProductDetail.appProductColorID ";
            StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID  ";
            StrQuery += " Inner join tblProductImage On tblProductImage.appProductColorID=tblProductColor.appProductColorID   ";
            StrQuery += " inner join tblColor On tblColor.appColorID=tblProductColor.appColorID  ";
            StrQuery += " Left Join tblsize on tblSize.appsizeId=tblProductDetail.appsizeId  ";
            StrQuery += " Left join tblCurrency On tblCurrency.appCurrencyID=tblSubOrder.appCurrencyID  ";
            StrQuery += " Left Join (Select appsubOrderId, max(appReturnOrderID) appReturnOrderID	From tblReturnOrderDetail	Group by appsubOrderId)tblReturnOrderDetail on tblReturnOrderDetail.appSubOrderID=tblSubOrder.appSubOrderID     ";
            StrQuery += " Left Join tblReturnOrder on tblReturnOrder.appReturnOrderID=tblReturnOrderDetail.appReturnOrderID   ";
           
            StrQuery += " where  tblProductImage.appIsDefault=1 ";
            if (strCustomerID != "0" && strCustomerID != "")
            {
                StrQuery += "  and tblOrder.appCustomerID=" + strCustomerID + "";
            }
            if (strOrderId != "0" && strOrderId != "")
            {
                StrQuery += " and tblSubOrder.appOrderId=" + strOrderId;
            }
            StrQuery += " order by tblSubOrder.appSubOrderID Desc ";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;

        }

        public DataTable GetCustomerOrderList(string strColumnName, string strColumnValue, string strCustomerId, string strOrderStatus)
        {
            strColumnValue = strColumnValue.Replace("'", "");

            string StrQuery = " Select tblSubOrder.appSubOrderID,tblSubOrder.appSubOrderNo,tblSubOrder.appQty,tblSubOrder.appSellingPrice,tblSubOrder.appRate,(IsNull(tblSubOrder.appSellingPrice,0)*IsNull(tblSubOrder.appRate,1)) as appRateSellingPrice,(IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)*IsNull(tblSubOrder.appRate,1)) as appTotal,tblSubOrder.appSubOrderStatusID,convert(varchar, tblSubOrder.appMaxDispatchDate,103)appMaxDispatchDate,tblProductDetail.appProductDetailID,tblProduct.appProductName,tblProduct.appProductCode,tblProductDetail.appProductColorID,tblProductDetail.appIsDefault,tblProductDetail.appMRP,tblProductDetail.appPrice,tblProductDetail.appQuantity,tblProductDetail.appSKUNo,tblProductDetail.appSizeID,tblProductColor.appColorID,tblColor.appColorName,tblColor.appColorCode,tblColor.appColorImage,tblSize.appsize,tblProductImage.appLargeImage,tblProductImage.appNormalImage,tblOrder.*,tblCustomer.appFirstName + ' '+ tblCustomer.appLastName as AppCustomerName,tblProduct.appProductCode,tblOrderStatus.appOrderStatus,case When tblProduct.appIsColor=1  Then tblColor.appColorName else '' End appColorLink,tblCurrency.appCurrencyID,tblCurrency.appSymbol ";
            StrQuery += " From tblSubOrder  ";
            StrQuery += " Inner join tblOrderStatus on tblOrderStatus.appOrderStatusID=tblSubOrder.appSubOrderStatusID  ";
            StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID  ";
            StrQuery += " Inner Join tblCustomer On tblCustomer.appCustomerID=tblOrder.appCustomerID ";
            StrQuery += " Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID  ";
            StrQuery += " Inner join tblProductColor On tblProductColor.appProductColorID=tblProductDetail.appProductColorID ";
            StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID  ";
            StrQuery += " Inner join tblProductImage On tblProductImage.appProductColorID=tblProductColor.appProductColorID   ";
            StrQuery += " inner join tblColor On tblColor.appColorID=tblProductColor.appColorID  ";
            StrQuery += " Left join tblCurrency On tblCurrency.appCurrencyID=tblSubOrder.appCurrencyID  ";
            StrQuery += " Left Join tblsize on tblSize.appsizeId=tblProductDetail.appsizeId  ";
            StrQuery += " where  tblProductImage.appIsDefault=1 and tblOrder.appCustomerID=" + strCustomerId;
            if (!string.IsNullOrEmpty(strColumnValue) & strColumnName != "0")
            {
                StrQuery += " and " + strColumnName + " LIKE '%" + strColumnValue + "%'";
            }
            else if (strColumnName == "0" && string.IsNullOrEmpty(strColumnValue))
            {
                StrQuery += " and ( appReceiverName LIKE '%" + strColumnValue + "%'";
                StrQuery += " or  appReceiverContactNo1 LIKE '%" + strColumnValue + "%' ";
                //StrQuery += " or  appReceiverContactNo2 LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appRecevierEmail LIKE '%" + strColumnValue + "%' ";
                //StrQuery += " or  appPreferedTime LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appProductName LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appBillReceiverName LIKE '%" + strColumnValue + "%' )";
                //StrQuery += " or  appBillReceiverContactNo1 LIKE '%" + strColumnValue + "%' ";
                //StrQuery += " or  appBillReceiverContactNo2 LIKE '%" + strColumnValue + "%' ";
                //StrQuery += " or  appBillRecevierEmail LIKE '%" + strColumnValue + "%' )";

            }
            if (strOrderStatus != "" & strOrderStatus != "0")
            {
                StrQuery += " and tblSubOrder.appSubOrderStatusID=" + strOrderStatus;
            }
            StrQuery += " order by tblSubOrder.appSubOrderID Desc ";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        public void SetOrderStatus(int intStatus, string strOrderID, string strChangeDate, string OldStatus = "", bool ISAllBlankDocketNo = true)
        {
            string StrQuery = "UPDATE A SET A.appOrderStatusID=" + intStatus + ",A.appOrderStatusChangeDate=CONVERT(datetime,'" + strChangeDate + "',103) ";
            StrQuery += "  From tblOrder  as A ";
            StrQuery += "  inner join tblSubOrder on tblSubOrder.appOrderID=A.appOrderID ";
            StrQuery += "  Where A.appOrderID In (" + strOrderID + " )";
            if (OldStatus != "" & OldStatus != "0")
            {
                StrQuery += " and appSubOrderStatusID=" + OldStatus;
            }
            if (intStatus == (Convert.ToInt32(Enums.Enums_OrderStatus.ReadyToShip)))
            {
                StrQuery += " and (appInvoiceGenerated Is Not Null and appInvoiceGenerated='True')";
            }
            if (intStatus == (Convert.ToInt32(Enums.Enums_OrderStatus.Shipped)))
            {
                StrQuery += " and (appManifestGenerated Is Not Null and appManifestGenerated='True')";
            }
            if (intStatus == (Convert.ToInt32(Enums.Enums_OrderStatus.Delivered)))
            {
                StrQuery += " and (appDocketNo is not null and appCourierCompanyID is not null)";
            }

            if (!ISAllBlankDocketNo)
            {
                StrQuery += " and (appDocketNo Is Not Null) ";
            }
            base.LoadFromRawSql(StrQuery);


            StrQuery = "UPDATE tblSubOrder SET appSubOrderStatusID=" + intStatus + ",appSubOrderChangeDate=CONVERT(datetime,'" + strChangeDate + "',103) Where appOrderID In (" + strOrderID + " )";

            if (OldStatus != "" & OldStatus != "0")
            {
                StrQuery += " and appSubOrderStatusID=" + OldStatus;
            }
            if (intStatus == (Convert.ToInt32(Enums.Enums_OrderStatus.ReadyToShip)))
            {
                StrQuery += " and (appInvoiceGenerated Is Not Null and appInvoiceGenerated='True')";
            }
            if (intStatus == (Convert.ToInt32(Enums.Enums_OrderStatus.Shipped)))
            {
                StrQuery += " and (appManifestGenerated Is Not Null and appManifestGenerated='True')";
            }
            if (intStatus == (Convert.ToInt32(Enums.Enums_OrderStatus.Delivered)))
            {
                StrQuery += " and (appDocketNo is not null and appCourierCompanyID is not null)";
            }
            if (!ISAllBlankDocketNo)
            {
                StrQuery += " and (appDocketNo Is Not Null) ";
            }
            base.LoadFromRawSql(StrQuery);
        }

        public void SetSubOrderStatus(int intStatus, string strSubOrderIds, string strChangeDate, string OldStatus = "", bool ISAllBlankDocketNo = true)
        {
            string StrQuery = "UPDATE tblSubOrder SET appSubOrderStatusID=" + intStatus + ",appSubOrderChangeDate=CONVERT(datetime,'" + strChangeDate + "',103) Where appSubOrderID In (" + strSubOrderIds + " )";

            if (OldStatus != "" & OldStatus != "0")
            {
                StrQuery += " and appSubOrderStatusID=" + OldStatus;
            }
            if (OldStatus != "" & OldStatus != "0")
            {
                StrQuery += " and appSubOrderStatusID=" + OldStatus;
            }
            if (intStatus == (Convert.ToInt32(Enums.Enums_OrderStatus.ReadyToShip)))
            {
                StrQuery += " and (appInvoiceGenerated Is Not Null and appInvoiceGenerated='True')";
            }
            if (intStatus == (Convert.ToInt32(Enums.Enums_OrderStatus.Shipped)))
            {
                StrQuery += " and (appManifestGenerated Is Not Null and appManifestGenerated='True')";
            }
            if (intStatus == (Convert.ToInt32(Enums.Enums_OrderStatus.Complete)))
            {
                StrQuery += " and convert(datetime,convert(varchar(10),tblSubOrder.appCompletedDate,105),105)<convert(datetime,convert(varchar(10),'" + strChangeDate + "',105),105)";
            }
            if (!ISAllBlankDocketNo)
            {
                StrQuery += " and (appDocketNo Is Not Null) ";
            }
            base.LoadFromRawSql(StrQuery);
        }

        public void SetProductQty(string strSubOrderIds)
        {
            string StrQuery = "UPDATE tblProductDetail SET tblProductDetail.appQuantity=tblProductDetail.appQuantity+tblSubOrder.appQty From tblProductDetail join tblSubOrder On tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID Where tblSubOrder.appSubOrderID In (" + strSubOrderIds + " )";
            base.LoadFromRawSql(StrQuery);
        }

        public DataTable GetProductFullInfo(string strSubOrderID)
        {
            string StrQuery = " Select tblSubOrder.appSubOrderID,tblSubOrder.appSubOrderNo,tblSubOrder.appQty,tblSubOrder.appSellingPrice,(IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)) as appTotal,tblSubOrder.appSubOrderStatusID,convert(varchar, tblSubOrder.appMaxDispatchDate,103)appMaxDispatchDate,tblProductDetail.appProductDetailID,tblProduct.appProductName,tblProduct.appProductCode,tblProductDetail.appProductColorID,tblProductDetail.appIsDefault,tblProductDetail.appMRP,tblProductDetail.appPrice,tblProductDetail.appQuantity,tblProductDetail.appSKUNo,tblProductDetail.appSizeID,tblProductColor.appColorID,tblColor.appColorName,tblColor.appColorCode,tblColor.appColorImage,tblSize.appsize,tblProductImage.appNormalImage,tblOrder.*,tblCustomer.appFirstName + ' '+ tblCustomer.appLastName as AppCustomerName,tblCourierCompany.appCourierCompany,tblOrderStatus.appOrderStatus";
            StrQuery += " From tblSubOrder  ";
            StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID  ";
            StrQuery += " Inner Join tblCustomer On tblCustomer.appCustomerID=tblOrder.appCustomerID ";
            StrQuery += " Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID  ";
            StrQuery += " Inner join tblProductColor On tblProductColor.appProductColorID=tblProductDetail.appProductColorID ";
            StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID  ";
            StrQuery += " Inner join tblProductImage On tblProductImage.appProductColorID=tblProductColor.appProductColorID   ";
            StrQuery += " inner join tblColor On tblColor.appColorID=tblProductColor.appColorID  ";
            StrQuery += " inner join tblOrderStatus On tblOrderStatus.appOrderStatusID=tblSubOrder.appSubOrderStatusID  ";
            StrQuery += " Left Join tblsize on tblSize.appsizeId=tblProductDetail.appsizeId  ";
            StrQuery += " Left Join tblCourierCompany on tblCourierCompany.appCourierCompanyID=tblSubOrder.appCourierCompanyID  ";
            StrQuery += " where  tblProductImage.appIsDefault=1";

            if (strSubOrderID != "0")
            {
                StrQuery += " and tblSubOrder.appSubOrderID=" + strSubOrderID;
            }

            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        public DataTable GetTotalPriceDayWise(string strNotInStatus, string stFromDate, string strToDate)
        {
            string StrQuery = " Select isnull(count(tblSubOrder.appsubOrderID),0) appTotalOrder , isnull(sum(isnull(tblSubOrder.appQty,1)*isnull(tblSubOrder.appSellingPrice,1)),0) appTotalOrderPrice	From tblSubOrder inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID ";
            StrQuery += " where  tblSubOrder.appSubOrderStatusID not in (" + strNotInStatus + ")";

            if (stFromDate != "" && strToDate != "")
            {
                StrQuery += " and convert(DateTime,convert(varchar(10),tblOrder.appCreatedDate,103),103) between convert(DateTime,convert(varchar(10),'" + stFromDate + "',103),103) and convert(DateTime,convert(varchar(10),'" + strToDate + "',103),103)";
            }

            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        public DataTable GetDashBoradOrder(string strColumnName, string strColumnValue, string strStatus, string strDate, string strColorCode = "")
        {
            strColumnValue = strColumnValue.Replace("'", "");

            string StrQuery = " Select tblSubOrder.appSubOrderID,tblSubOrder.appSubOrderNo,tblSubOrder.appQty,tblSubOrder.appSellingPrice,(IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)) as appTotal,tblSubOrder.appSubOrderStatusID,convert(varchar, tblSubOrder.appMaxDispatchDate,103)appMaxDispatchDate, tblSubOrder.appDocketNo,convert(varchar, tblSubOrder.appShippedDate,103) appShippedDate, tblSubOrder.appShippedStatus,tblProductDetail.appProductDetailID,tblProduct.appProductName,tblProduct.appProductCode,tblProductDetail.appProductColorID,tblProductDetail.appIsDefault,tblProductDetail.appMRP,tblProductDetail.appPrice,tblProductDetail.appQuantity,tblProductDetail.appSKUNo,tblProductDetail.appSizeID,tblProductColor.appColorID,tblColor.appColorName,tblColor.appColorCode,tblColor.appColorImage,tblSize.appsize,tblProductImage.appThumbImage,tblProductImage.appNormalImage,tblOrder.*,tblCustomer.appFirstName + ' '+ tblCustomer.appLastName as AppCustomerName,tblCourierCompany.appCourierCompany ,case When tblProduct.appIsColor=1  Then tblColor.appColorName else '' End appColorLink ";
            StrQuery += " From tblSubOrder  ";
            StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID  ";
            StrQuery += " Inner Join tblCustomer On tblCustomer.appCustomerID=tblOrder.appCustomerID ";
            StrQuery += " Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID  ";
            StrQuery += " Inner join tblProductColor On tblProductColor.appProductColorID=tblProductDetail.appProductColorID ";
            StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID  ";
            StrQuery += " Inner join tblProductImage On tblProductImage.appProductColorID=tblProductColor.appProductColorID   ";
            StrQuery += " inner join tblColor On tblColor.appColorID=tblProductColor.appColorID  ";
            StrQuery += " Left Join tblsize on tblSize.appsizeId=tblProductDetail.appsizeId  ";
            StrQuery += " Left Join tblCourierCompany on tblCourierCompany.appCourierCompanyID=tblSubOrder.appCourierCompanyID  ";
            StrQuery += " where  tblProductImage.appIsDefault=1 and tblSubOrder.appSubOrderStatusID in (" + strStatus + " )";
            if (!string.IsNullOrEmpty(strColumnValue) & strColumnName != "0")
            {
                StrQuery += " and " + strColumnName + " LIKE '%" + strColumnValue + "%'";
            }
            else if (strColumnName == "0" && !(string.IsNullOrEmpty(strColumnValue)))
            {
                StrQuery += " and ( appProductName LIKE '%" + strColumnValue + "%'";
                StrQuery += " or  appQty LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appSellingPrice LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appSKUNo LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appLastName LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appFirstName LIKE '%" + strColumnValue + "%' )";

            }
            if (strColorCode != "0")
            {
                StrQuery += " and tblColor.AppColorCode='" + strColorCode + "'";
            }
            if (strDate != "")
            {
                StrQuery += " and convert(DateTime,convert(varchar(10),tblOrder.appCreatedDate,103),103)=convert(DateTime,convert(varchar(10),'" + strDate + "',103),103)";
            }
            StrQuery += " order by tblSubOrder.appSubOrderID  Desc";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }


        public DataTable GetSubOrderList(string strColumnName, string strColumnValue, string strStatus, string strsellerId = "", string strCourierCompanyId = "", string strMenifest = "", string strCompleteDate = "")
        {
            strColumnValue = strColumnValue.Replace("'", "");
            string StrQuery = " Select tblSubOrder.appSubOrderID,tblSubOrder.appSellerID,tblSubOrder.appOrderID,tblSubOrder.appSellerOrderID,tblSubOrder.appSubOrderNo,tblSubOrder.appProductDetailID,tblSubOrder.appQty,tblSubOrder.appSellingPrice,tblSubOrder.appSubOrderStatusID,convert(varchar,tblSubOrder.appSubOrderChangeDate,105) appSubOrderChangeDate,convert(varchar,tblSubOrder.appMaxDispatchDate,105) appMaxDispatchDate,tblSubOrder.appCourierCompanyID,tblSubOrder.appDocketNo,tblSubOrder.appShippingCharges,tblSubOrder.appShippedDate,tblSubOrder.appShippedStatus,tblSubOrder.appCommision,tblSubOrder.appCommisionRs,tblSubOrder.appServiceTax,tblSubOrder.appServiceTaxRs,tblSubOrder.appFixedFee,tblSubOrder.appSellerPrice,tblSubOrder.appManifestGenerated,tblSubOrder.appManifestID,tblSubOrder.appSelfCourier,convert(varchar,tblSubOrder.appDispatchDate,105) appDispatchDate,convert(varchar,tblSubOrder.appDeliveryDate,105) appDeliveryDate,tblSubOrder.appInvoiceGenerated,convert(varchar,tblSubOrder.appCompletedDate,105) appCompletedDate,tblSubOrder.appIsPaid,tblSubOrder.appSettlementID,tblSubOrder.appPayOutNote,convert(varchar,tblSubOrder.appPayOutDate,105) appPayOutDate,tblSubOrder.appApprovedBy,convert(varchar,tblSubOrder.appApprovedDate,105) appApprovedDate,	(IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)) as appTotal, tblSellerOrder.appSellerOrderNo,tblOrder.appOrderNo,tblOrder.appCustomerID, tblOrder.appCreatedDate,tblOrder.appOrderStatusID, tblOrder.appOrderAmount,convert(varchar,tblOrder.appOrderStatusChangeDate,105)appOrderStatusChangeDate, tblOrder.appReceiverName,tblOrder.appReceiverAddress, tblOrder.appReceiverContactNo1,tblOrder.appReceiverContactNo2,tblOrder.appPreferedTime,tblOrder.appRecevierEmail,tblOrder.appPaymentMode  ,tblProduct.appProcurementDays ,tblOrderStatus.appOrderStatus ,convert(varchar,tblOrder.appCreatedDate,105)appOrderedDate, tblProductDetail.appProductDetailID,tblProductDetail.appProductColorID,tblProductDetail.appSKUNo,tblProductDetail.appSizeID, tblProduct.appProductId,tblProduct.appProductName,tblProduct.appProductCode, tblProduct.appWeight,tblCourierCompany.appCourierCompany,tblCourierCompany.appCourierCompanyID, DATEDIFF(day,getDate(),appMaxDispatchDate) appRemmingDispatchDay,tblReturnOrderDetail.appReturnOrderID,tblReturnOrder.appReturnStatus ";
            StrQuery += " From tblSubOrder	  ";
            StrQuery += " Inner join ( Select appSellerOrderID,min(appSubOrderId) as appSubOrderId From tblSubOrder where  tblSubOrder.appSubOrderStatusID in (" + strStatus + " ) and tblSubOrder.appSellerId=" + strsellerId + " Group by appSellerOrderID ) tblTemp on tblTemp.appSubOrderId=tblSubOrder.appSubOrderId  ";
            StrQuery += " Inner join tblSellerOrder on tblSellerOrder.appSellerOrderID=tblSubOrder.appSellerOrderID ";
            StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID ";
            StrQuery += " Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID  ";
            StrQuery += " Inner join tblProductColor On tblProductColor.appProductColorID=tblProductDetail.appProductColorID ";
            StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID  ";
            StrQuery += " inner join tblOrderStatus on tblSubOrder.appSubOrderStatusID=tblOrderStatus.appOrderStatusID ";
            StrQuery += " Left Join tblCourierCompany on tblCourierCompany.appCourierCompanyID=tblSubOrder.appCourierCompanyID  ";
            StrQuery += " Left Join (Select appsubOrderId, max(appReturnOrderID) appReturnOrderID	From tblReturnOrderDetail	Group by appsubOrderId)tblReturnOrderDetail on tblReturnOrderDetail.appSubOrderID=tblSubOrder.appSubOrderID     ";
            StrQuery += " Left Join tblReturnOrder on tblReturnOrder.appReturnOrderID=tblReturnOrderDetail.appReturnOrderID   ";
            StrQuery += " where   tblSubOrder.appSubOrderStatusID in (" + strStatus + " )";
            if (!string.IsNullOrEmpty(strColumnValue) & strColumnName != "0")
            {
                StrQuery += " and " + strColumnName + " LIKE '%" + strColumnValue + "%'";
            }
            else if (strColumnName == "0" && !(string.IsNullOrEmpty(strColumnValue)))
            {
                StrQuery += " and ( appProductName LIKE '%" + strColumnValue + "%'";
                StrQuery += " or  appQty LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appSellingPrice LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appSKUNo LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appLastName LIKE '%" + strColumnValue + "%' ";
                StrQuery += " or  appFirstName LIKE '%" + strColumnValue + "%' )";
            }

            if (strsellerId != "0")
            {
                StrQuery += " and tblSubOrder.appSellerId=" + strsellerId;
            }
            if (strCourierCompanyId != "0" && strCourierCompanyId != "")
            {
                StrQuery += " and tblCourierCompany.appCourierCompanyID='" + strCourierCompanyId + "'";
            }
            if (strMenifest != "0" && strMenifest != "")
            {
                if (strMenifest == "true")
                {
                    StrQuery += " and tblSubOrder.appManifestGenerated=1 ";
                }
                else if (strMenifest == "false")
                {
                    StrQuery += " and tblSubOrder.appManifestGenerated=0 ";
                }
            }

            if (strCompleteDate != "")
            {
                StrQuery += " and convert(datetime,convert(varchar(10),tblSubOrder.appCompletedDate,105),105)<convert(datetime,convert(varchar(10),'" + strCompleteDate + "',105),105)";
            }

            StrQuery += " order by tblSubOrder.appSubOrderID  Desc";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        //public DataTable GetSubOrderListMainfest(string strOrderId, string strCourierCompanyId, string strStatus)
        //{
        //    string StrQuery = "Select tblSubOrder.appSubOrderID,tblSubOrder.appOrderID,tblSubOrder.appSubOrderNo,tblSubOrder.appProductDetailID,tblSubOrder.appQty,tblSubOrder.appSellingPrice,tblSubOrder.appSubOrderStatusID,convert(varchar,tblSubOrder.appSubOrderChangeDate,105) appSubOrderChangeDate,convert(varchar,tblSubOrder.appMaxDispatchDate,105) appMaxDispatchDate,tblSubOrder.appCourierCompanyID,tblSubOrder.appDocketNo,tblSubOrder.appShippingCharges,tblSubOrder.appShippedDate,tblSubOrder.appShippedStatus,tblSubOrder.appCommision,tblSubOrder.appCommisionRs,tblSubOrder.appServiceTax,tblSubOrder.appServiceTaxRs,tblSubOrder.appFixedFee,tblSubOrder.appManifestGenerated,tblSubOrder.appManifestID,tblSubOrder.appSelfCourier,convert(varchar,tblSubOrder.appDispatchDate,105) appDispatchDate,convert(varchar,tblSubOrder.appDeliveryDate,105) appDeliveryDate,tblSubOrder.appInvoiceGenerated,	(IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)) as appTotal,tblOrder.appOrderNo,tblOrder.appCustomerID, tblOrder.appCreatedDate,tblOrder.appOrderStatusID,tblOrder.appOrderAmount,convert(varchar,tblOrder.appOrderStatusChangeDate,105)appOrderStatusChangeDate, tblOrder.appReceiverName,tblOrder.appReceiverAddress, tblOrder.appReceiverContactNo1,tblOrder.appReceiverContactNo2,tblOrder.appPreferedTime,tblOrder.appRecevierEmail,tblOrder.appPaymentMode  ,tblOrderStatus.appOrderStatus ,convert(varchar,tblOrder.appCreatedDate,105)appOrderedDate, tblProductDetail.appProductDetailID,tblProductDetail.appProductColorID,tblProductDetail.appSKUNo,tblProductDetail.appSizeID, tblProduct.appProductId,tblProduct.appProductName,tblProduct.appProductCode, tblProduct.appWeight,tblCourierCompany.appCourierCompany,tblCourierCompany.appCourierCompanyID, DATEDIFF(day,getDate(),appMaxDispatchDate) appRemmingDispatchDay, tblBuyer.appState as appBuyerState ,tblBuyer.appCountry as appBuyerCountry, tblBuyer.appCity as appBuyerCity, tblBuyer.appPinCode as appBuyerPinCode   From tblSubOrder	 ";
        //    StrQuery += "   Inner join ( Select appOrderID,min(appSubOrderID) as appSubOrderId From tblSubOrder where  		tblSubOrder.appSubOrderStatusID in (" + strStatus + " ) and tblSubOrder.appCourierCompanyID is not null 		and tblSubOrder.appDocketNo 		is not null and ( tblSubOrder.appManifestGenerated is null or tblSubOrder.appManifestGenerated='false')		and  tblSubOrder.appCourierCompanyID=" + strCourierCompanyId + " Group by appOrderID) tblTemp on tblTemp.appSubOrderId=tblSubOrder.appSubOrderId ";
        //    StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID ";
        //    StrQuery += "  Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID   ";
        //    StrQuery += " Inner join tblProductColor On tblProductColor.appProductColorID=tblProductDetail.appProductColorID   ";
        //    StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID    ";
        //    StrQuery += " inner join tblOrderStatus on tblSubOrder.appSubOrderStatusID=tblOrderStatus.appOrderStatusID   ";
        //    StrQuery += " Left Join tblCourierCompany on tblCourierCompany.appCourierCompanyID=tblSubOrder.appCourierCompanyID ";
        //    StrQuery += " left join (select tblState.appState,tblCountry.appCountry, tblCity.appCity, tblPinCode.appPinCode from tblPinCode 		 left join tblCity on tblCity.appCityID=tblPinCode.appCityID			 left join tblState on tblCity.appStateID=tblState.appStateID 			left join tblCountry on tblState.appCountryID=tblCountry.appCountryID) as  tblBuyer  on tblBuyer.appPinCode=tblOrder.appReceiverPIN   ";
        //    StrQuery += " where   tblSubOrder.appSubOrderStatusID in (" + strStatus + " )";
        //    StrQuery += " and tblSubOrder.appOrderID in (" + strOrderId + ")";
        //    StrQuery += " and tblSubOrder.appCourierCompanyID=" + strCourierCompanyId;
        //    StrQuery += " and tblSubOrder.appCourierCompanyID is not null and tblSubOrder.appDocketNo is not null ";
        //    StrQuery += " order by tblSubOrder.appSubOrderID  Desc";
        //    base.LoadFromRawSql(StrQuery);
        //    return base.DefaultView.Table;
        //}

        //make comment above function because we remove courier company and docket number
        public DataTable GetSubOrderListMainfest(string strOrderId, string strStatus)
        {
            string StrQuery = "Select Row_Number() over(ORDER BY tblSubOrder.appSubOrderID ) as appRowNo,tblOrder.appReceiverName + ',' + tblOrder.appReceiverAddress +' '+ tblOrder.appReceiverContactNo1 as appReceiverDetail,convert(varchar,getdate(),105) appManifestDate,tblSubOrder.appSubOrderID,tblSubOrder.appOrderID,tblSubOrder.appSubOrderNo,tblSubOrder.appProductDetailID,tblSubOrder.appQty,tblSubOrder.appSellingPrice,tblSubOrder.appSubOrderStatusID,convert(varchar,tblSubOrder.appSubOrderChangeDate,105) appSubOrderChangeDate,convert(varchar,tblSubOrder.appMaxDispatchDate,105) appMaxDispatchDate,tblSubOrder.appCourierCompanyID,tblSubOrder.appDocketNo,tblSubOrder.appShippingCharges,tblSubOrder.appShippedDate,tblSubOrder.appShippedStatus,tblSubOrder.appCommision,tblSubOrder.appCommisionRs,tblSubOrder.appServiceTax,tblSubOrder.appServiceTaxRs,tblSubOrder.appFixedFee,tblSubOrder.appManifestGenerated,tblSubOrder.appManifestID,tblSubOrder.appSelfCourier,convert(varchar,tblSubOrder.appDispatchDate,105) appDispatchDate,convert(varchar,tblSubOrder.appDeliveryDate,105) appDeliveryDate,tblSubOrder.appInvoiceGenerated,	(IsNull(tblSubOrder.appQty,0)*IsNull(tblSubOrder.appSellingPrice,0)) as appTotal,tblOrder.appOrderNo,tblOrder.appCustomerID, tblOrder.appCreatedDate,tblOrder.appOrderStatusID,tblOrder.appOrderAmount,convert(varchar,tblOrder.appOrderStatusChangeDate,105)appOrderStatusChangeDate, tblOrder.appReceiverName,tblOrder.appReceiverAddress, tblOrder.appReceiverContactNo1,tblOrder.appReceiverContactNo2,tblOrder.appPreferedTime,tblOrder.appRecevierEmail,tblOrder.appPaymentMode  ,tblOrderStatus.appOrderStatus ,convert(varchar,tblOrder.appCreatedDate,105)appOrderedDate, tblProductDetail.appProductDetailID,tblProductDetail.appProductColorID,tblProductDetail.appSKUNo,tblProductDetail.appSizeID, tblProduct.appProductId,tblProduct.appProductName,tblProduct.appProductCode, tblProduct.appWeight, DATEDIFF(day,getDate(),appMaxDispatchDate) appRemmingDispatchDay, tblBuyer.appState as appBuyerState ,tblBuyer.appCountry as appBuyerCountry, tblBuyer.appCity as appBuyerCity, tblBuyer.appPinCode as appBuyerPinCode   From tblSubOrder	 ";
            StrQuery += "   Inner join ( Select appOrderID,min(appSubOrderID) as appSubOrderId From tblSubOrder where tblSubOrder.appSubOrderStatusID in (" + strStatus + " ) and ( tblSubOrder.appManifestGenerated is null or tblSubOrder.appManifestGenerated='false') Group by appOrderID) tblTemp on tblTemp.appSubOrderId=tblSubOrder.appSubOrderId ";
            StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID ";
            StrQuery += "  Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID   ";
            StrQuery += " Inner join tblProductColor On tblProductColor.appProductColorID=tblProductDetail.appProductColorID   ";
            StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID    ";
            StrQuery += " inner join tblOrderStatus on tblSubOrder.appSubOrderStatusID=tblOrderStatus.appOrderStatusID   ";
            // StrQuery += " Left Join tblCourierCompany on tblCourierCompany.appCourierCompanyID=tblSubOrder.appCourierCompanyID ";
            StrQuery += " left join (select tblState.appState,tblCountry.appCountry, tblCity.appCity, tblPinCode.appPinCode from tblPinCode 		 left join tblCity on tblCity.appCityID=tblPinCode.appCityID			 left join tblState on tblCity.appStateID=tblState.appStateID 			left join tblCountry on tblState.appCountryID=tblCountry.appCountryID) as  tblBuyer  on tblBuyer.appPinCode=tblOrder.appReceiverPIN   ";
            StrQuery += " where   tblSubOrder.appSubOrderStatusID in (" + strStatus + " )";
            StrQuery += " and tblSubOrder.appOrderID in (" + strOrderId + ")";
            // StrQuery += " and tblSubOrder.appCourierCompanyID=" + strCourierCompanyId;
            //  StrQuery += " and tblSubOrder.appCourierCompanyID is not null and tblSubOrder.appDocketNo is not null ";
            StrQuery += " order by tblSubOrder.appSubOrderID  Desc";
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }

        public void SetSubOrderMenifest(string strSubOrderIds, int intMenifestID, string strStatus)
        {
            string StrQuery = "UPDATE tblSubOrder SET appManifestID=" + intMenifestID + ",appManifestGenerated='true' Where appOrderID In (" + strSubOrderIds + ")  and tblSubOrder.appSubOrderStatusID in (" + strStatus + " ) and ( tblSubOrder.appManifestGenerated is null or tblSubOrder.appManifestGenerated='false') ";
            base.LoadFromRawSql(StrQuery);
        }
        public void SetOrderstatusWhenReturnReject(int intCurrentStatus, int intChangeStatus, string strReturnOrderId, string strChangeDate)
        {
            string StrQuery = "UPDATE tblSubOrder SET appSubOrderStatusID=" + intChangeStatus + ",appSubOrderChangeDate=CONVERT(datetime,'" + strChangeDate + "',103) ";
            StrQuery += " From tblSubOrder inner join tblReturnOrderDetail on tblReturnOrderDetail.appSubOrderID=tblSubOrder.appSubOrderID ";
            StrQuery += " Where tblReturnOrderDetail.appReturnOrderID=" + strReturnOrderId;
            StrQuery += " and tblSubOrder.appSubOrderStatusID In (" + intCurrentStatus + " )";
            base.LoadFromRawSql(StrQuery);
        }
        public DataTable LoadOrdersFromDisputeID(string strDisputeNo)
        {

            string StrQuery = "select tblProductImage.appThumbImage,tblSubOrder.appQty,tblProductDetail.appSKUNo,tblSubOrder.appProductDetailID,tblSubOrder.appSellingPrice,tblOrder.appCustomerID, tblProductDetail.appProductDetailID,tblProductDetail.appProductColorID,tblProductDetail.appSKUNo,tblProductDetail.appSizeID, tblProduct.appProductId,tblProduct.appProductName,tblProduct.appProductCode, tblColor.appColorName, tblSize.appsize ";
            StrQuery += " From tblSubOrder	 ";
            StrQuery += " inner join tblDisputeDetail on tblDisputeDetail.appSubOrderID=tblSubOrder.appSubOrderID	 ";
            StrQuery += " inner join tblDispute on tblDispute.appDisputeID=tblDisputeDetail.appDisputeID	 ";

            StrQuery += " Inner join tblOrder on tblOrder.appOrderID=tblSubOrder.appOrderID  ";
            StrQuery += "  Inner join tblProductDetail on tblProductDetail.appProductDetailID=tblSubOrder.appProductDetailID  ";
            StrQuery += " Inner join tblProductColor On tblProductColor.appProductColorID=tblProductDetail.appProductColorID  ";
            StrQuery += " Inner join tblProduct on tblProduct.appProductID=tblProductColor.appProductID            ";
            StrQuery += " Inner join tblProductImage On tblProductImage.appProductColorID=tblProductColor.appProductColorID    ";
            StrQuery += "   inner join tblColor On tblColor.appColorID=tblProductColor.appColorID  ";
            StrQuery += " inner join tblOrderStatus on tblSubOrder.appSubOrderStatusID=tblOrderStatus.appOrderStatusID  ";
            StrQuery += "  Left Join tblsize on tblSize.appsizeId=tblProductDetail.appsizeId  ";
            StrQuery += "  Left Join tblCourierCompany on tblCourierCompany.appCourierCompanyID=tblSubOrder.appCourierCompanyID   ";
            StrQuery += "  where   tblProductImage.appIsDefault=1 ";
            if (strDisputeNo != "0" && strDisputeNo != "")
            {
                StrQuery += " and tblDispute.appDisputeID=" + strDisputeNo + " ";
            }
            base.LoadFromRawSql(StrQuery);
            return base.DefaultView.Table;
        }
    }

}
